{"componentChunkName":"component---src-templates-blog-post-js","path":"/2025y/webclient/","result":{"data":{"site":{"siteMetadata":{"title":"코딩 주머니"}},"markdownRemark":{"id":"e0b1b946-ea07-5d47-9d52-4627d912ebd9","excerpt":"모니터링을 통해 보름에 한 번씩 PrematureCloseException 네트워크 예외가 발생하는 것을 확인했다.","html":"<p>모니터링을 통해 보름에 한 번씩 PrematureCloseException 네트워크 예외가 발생하는 것을 확인했다.</p>\n<deckgo-highlight-code language=\"mermaid\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">sequenceDiagram\n    participant C as Client (WebClient)\n    participant P as Connection Pool\n    participant S as Server (Tomcat)\n    \n    Note over C,S: ✅ 정상 통신\n    C-&gt;&gt;S: Request\n    S-&gt;&gt;C: Response\n    C-&gt;&gt;P: 연결 반환 (유휴 시작)\n    \n    Note over S: ⏰ Keep-alive 20초 경과\n    S-&gt;&gt;C: FIN 패킷 (연결 종료)\n    Note over C: 연결 닫힘 (하지만 풀은 모름!)\n    \n    Note over C: 30초 후 새 요청\n    P-&gt;&gt;C: 죽은 연결 제공\n    C-&gt;&gt;S: Request 시도\n    S-&gt;&gt;C: ❌ RST (이미 닫힌 연결)\n    Note over C: 💥 PrematureCloseException!</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"PrematureCloseException 해결부터 재현까지 (작성중)","date":"2025-09-12","update":"2025-09-12","description":null,"tags":["deep-dive","network","postmortem"]},"tableOfContents":""},"previous":{"fields":{"slug":"/2025y/coroutinescope/"},"frontmatter":{"title":"API가 왜 멈췄을까? 코루틴 이해하기"}},"next":null},"pageContext":{"id":"e0b1b946-ea07-5d47-9d52-4627d912ebd9","previousPostId":"44185076-e856-5646-974d-b8c8a058bc63","nextPostId":null}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}