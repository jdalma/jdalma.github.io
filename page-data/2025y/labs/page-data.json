{"componentChunkName":"component---src-templates-blog-post-js","path":"/2025y/labs/","result":{"data":{"site":{"siteMetadata":{"title":"코딩 주머니"}},"markdownRemark":{"id":"9adc1019-637b-546b-ba6a-a7b3328b7519","excerpt":"InnoDB 행 잠금의 2원 2규칙 원칙 1: InnoDB의 기본 잠금 단위는 넥스트 키 락이며, 넥스트 키 락의 잠금 범위는 좌측으로는 개구간, 우측으로는 폐구간이다.  InnoDB 잠금의 시작은 넥스트 키 락이다. 이후에 갭 락과 레코드 락을 따져보는 것이다. 원칙…","html":"<blockquote>\n<p><a href=\"https://devocean.sk.com/blog/techBoardDetail.do?ID=167948&#x26;boardType=techBlog\">InnoDB 행 잠금의 2원 2규칙</a></p>\n<ul>\n<li><strong>원칙 1</strong>: InnoDB의 기본 잠금 단위는 넥스트 키 락이며, 넥스트 키 락의 잠금 범위는 좌측으로는 개구간, 우측으로는 폐구간이다. <code class=\"language-text\">ex) (R1, R10]</code>\n<ul>\n<li>InnoDB 잠금의 시작은 넥스트 키 락이다. 이후에 갭 락과 레코드 락을 따져보는 것이다.</li>\n</ul>\n</li>\n<li><strong>원칙 2</strong>: 잠금은 쿼리를 수행하는 과정에서 접근한 객체에만 걸린다.</li>\n<li><strong>규칙 1</strong>: 인덱스(고유, 비고유)를 사용하는 동등 조건의 쿼리를 수행할 때 레코드 스캔 방향은 오른쪽이며, 마지막 레코드가 동등 조건을 만족하지 않으면 넥스트 키 락은 갭 락으로 강등된다.</li>\n<li><strong>규칙 2</strong>: 고유 인덱스를 사용하는 동등 조건의 쿼리를 수행할 때, 레코드가 동등 조건을 만족하면 넥스트 키 락은 레코드 락으로 강등된다.</li>\n</ul>\n</blockquote>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">-- 테스트 테이블 및 데이터 준비\nCREATE TABLE t (\n  id int NOT NULL,\n  a int NULL,\n  b int NULL,\n  PRIMARY KEY (id),\n  KEY ix_a (a)\n) ENGINE=InnoDB;</code>\n        </deckgo-highlight-code>\n<details>\n<summary>🔐 잠금 상태 조회 쿼리</summary>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">-- 잠금 상태 조회하기\nSELECT \n    dl.object_name AS `table`,\n    dl.lock_type,\n    dl.index_name,\n    dl.lock_mode,\n    CASE \n        WHEN dl.lock_mode LIKE &#39;%REC_NOT_GAP%&#39; THEN &#39;Record Lock&#39;\n        WHEN dl.lock_mode LIKE &#39;%GAP%&#39; AND dl.lock_mode NOT LIKE &#39;%REC_NOT_GAP%&#39; THEN &#39;Gap Lock&#39;\n        WHEN dl.lock_mode NOT LIKE &#39;%GAP%&#39; AND dl.lock_mode NOT LIKE &#39;%REC_NOT_GAP%&#39; THEN &#39;Next-Key Lock&#39;\n        ELSE dl.lock_mode\n    END AS lock_type_detail,\n    dl.lock_data AS locked_data\nFROM performance_schema.data_locks dl\nORDER BY dl.object_name, dl.lock_data;</code>\n        </deckgo-highlight-code>\n</details>\n<h2 id=\"갭-락으로-인한-insert-실패\" style=\"position:relative;\">갭 락으로 인한 INSERT 실패<a href=\"#%EA%B0%AD-%EB%9D%BD%EC%9C%BC%EB%A1%9C-%EC%9D%B8%ED%95%9C-insert-%EC%8B%A4%ED%8C%A8\" aria-label=\"갭 락으로 인한 insert 실패 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">+----+------+------+\n| id | a    | b    |\n+----+------+------+\n|  0 |    0 |    0 |\n|  5 |    5 |    5 |\n| 10 |   10 |   10 |\n| 15 |   15 |   15 |\n| 20 |   20 |   20 |\n| 25 |   25 |   25 |\n+----+------+------+\n\n-- &lt;A 세션&gt; 존재하지 않는 id = 7를 업데이트 \nBEGIN;\nUPDATE t SET b=b+1 WHERE id=7;\n\n+-------+-----------+------------+-----------+------------------+-------------+\n| table | lock_type | index_name | lock_mode | lock_type_detail | locked_data |\n+-------+-----------+------------+-----------+------------------+-------------+\n| t     | TABLE     | NULL       | IX        | Next-Key Lock    | NULL        |\n| t     | RECORD    | PRIMARY    | X,GAP     | Gap Lock         | 10          |\n+-------+-----------+------------+-----------+------------------+-------------+\n\n-- &lt;B 세션&gt;\nINSERT INTO t VALUES (8, 8, 8);     -- BLOCKED\nINSERT INTO t VALUES (9, 9, 9);     -- BLCOKED\n\nINSERT INTO t VALUES (4, 4, 4);     -- 성공\nINSERT INTO t VALUES (11, 11, 11);  -- 성공\nUPDATE t SET b=b+1 WHERE id=5;      -- 성공\nUPDATE t SET b=b+1 WHERE id=10;     -- 성공</code>\n        </deckgo-highlight-code>\n<p>먼저 넥스트 키 락에 의해 <code class=\"language-text\">(5, 10]</code>으로 잠금되고, 마지막 레코드 10이 id=7 조건에 만족하지 않기 때문에 넥스트 키 락은 갭 락으로 강등되어 <code class=\"language-text\">(5, 10)</code>의 잠금이 발생한다.<br>\n그리하여 마지막 업데이트 쿼리는 둘 다 성공한다.</p>\n<h2 id=\"non-unique-세컨더리-인덱스-동등-잠금-for-share\" style=\"position:relative;\">non-unique 세컨더리 인덱스 동등 잠금 (FOR SHARE)<a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%8F%99%EB%93%B1-%EC%9E%A0%EA%B8%88-for-share\" aria-label=\"non unique 세컨더리 인덱스 동등 잠금 for share permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">+----+------+------+\n| id | a    | b    |\n+----+------+------+\n|  0 |    0 |    0 |\n|  5 |    5 |    5 |\n| 10 |   10 |   10 |\n| 15 |   15 |   15 |\n| 20 |   20 |   20 |\n| 25 |   25 |   25 |\n+----+------+------+\n\n-- &lt;A 세션&gt;\nBEGIN;\nselect id from t where a = 5 for share;\n\n+-------+-----------+------------+-----------+------------------+-------------+\n| table | lock_type | index_name | lock_mode | lock_type_detail | locked_data |\n+-------+-----------+------------+-----------+------------------+-------------+\n| t     | TABLE     | NULL       | IS        | Next-Key Lock    | NULL        |\n| t     | RECORD    | ix_a       | S,GAP     | Gap Lock         | 10, 10      | &lt;- (5, 10)\n| t     | RECORD    | ix_a       | S         | Next-Key Lock    | 5, 5        | &lt;- (0, 5]\n+-------+-----------+------------+-----------+------------------+-------------+\n\n-- &lt;B 세션&gt;\nINSERT INTO t VALUES (-1, -1, -1);  -- 성공\nINSERT INTO t VALUES (0,0,0);   -- BLOCKED\nINSERT INTO t VALUES (3,3,3);   -- BLOCKED\nINSERT INTO t VALUES (7,7,7);   -- BLOCKED\n\nUPDATE t SET b=b+1 WHERE id=5;  -- 성공\nUPDATE t SET b=b+1 WHERE id=10; -- 성공\n\n+----+------+------+\n| id | a    | b    |\n+----+------+------+\n| -1 |   -1 |   -1 |\n|  0 |    0 |    0 |\n|  5 |    5 |    6 |\n| 10 |   10 |   11 |\n+----+------+------+\n\nUPDATE t SET a=a+1 WHERE id=10; -- 성공\nUPDATE t SET a=a+1 WHERE id=5;  -- BLOCKED\n\n+----+------+------+\n| id | a    | b    |\n+----+------+------+\n| -1 |   -1 |   -1 |\n|  0 |    0 |    0 |\n|  5 |    5 |    6 |\n| 10 |   11 |   11 |\n+----+------+------+</code>\n        </deckgo-highlight-code>\n<ul>\n<li><strong>Q: 왜 5미만의 INSERT 쿼리는 실행하지 못할까?</strong>\n<ul>\n<li>원칙 1에 따라 기본 잠금 단위는 넥스트 키 락이기 때문에 <code class=\"language-text\">(0,5]</code>에 넥스트 키 락이 설정된다.</li>\n</ul>\n</li>\n<li><strong>Q: 왜 <code class=\"language-text\">id = (5 &lt; N &lt; 10)</code>의 INSERT 쿼리는 실행하지 못할까?</strong>\n<ul>\n<li>a 컬럼 인덱스는 유니크하지 않은 세컨더리 인덱스이기 때문에 <code class=\"language-text\">a = 5</code>에 해당하는 레코드만 찾아서 바로 종료하는 것이 아니라 오른쪽으로 계속 스캔하여 레코드 10을 찾을 때까지 이동하기에 <code class=\"language-text\">(5,10]</code>에 넥스트 키 락이 설정된다. <strong>이 과정에서 접근한 모든 객체에 잠금을 걸게 되기 때문이다</strong></li>\n</ul>\n</li>\n<li><strong>Q: 왜 <code class=\"language-text\">id=10</code>에 대한 a,b 컬럼 UPDATE는 성공할까?</strong>\n<ul>\n<li>10은 <code class=\"language-text\">a = 5</code> 조건을 만족하지 않기 때문에 넥스트 키 락이 갭 락으로 강등되어 <code class=\"language-text\">(5,10)</code>으로 잠금 범위가 변경되기 때문이다.</li>\n</ul>\n</li>\n<li><strong>Q: FOR SHARE로 <code class=\"language-text\">a = 5</code>에 대한 명시적 공유 잠금을 걸었는데 b 컬럼에 대한 업데이트는 왜 실행될까?</strong>\n<ul>\n<li>A 세션의 FOR SHARE 쿼리는 커버링 인덱스를 활용하고 있고 조회 가능 잠금이기 때문에 프라이머리 키 인덱스에 어떠한 잠금도 설정되지 않는다.</li>\n<li>잠금에 대한 정보를 통해 <code class=\"language-text\">ix_a 인덱스의 (5,10) 구간에 걸린 Gap Lock</code>으로 인해 a 컬럼은 UPDATE가 실행되지 않았고, b 컬럼에 대한 UPDATE는 실행 가능한 것이다.</li>\n<li>만약 <code class=\"language-text\">a = 5</code>에 대한 조회 가능 잠금을 통해 레코드가 업데이트 되는 것을 원하지 않으면 FOR SHARE 쿼리를 수정하면 된다.</li>\n</ul>\n</li>\n</ul>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">select * from t where a = 5 for share; -- 또는\nselect id, a, b from t where a = 5 for share;\n\n+-------+-----------+------------+---------------+------------------+-------------+\n| table | lock_type | index_name | lock_mode     | lock_type_detail | locked_data |\n+-------+-----------+------------+---------------+------------------+-------------+\n| t     | TABLE     | NULL       | IS            | Next-Key Lock    | NULL        |\n| t     | RECORD    | ix_a       | S,GAP         | Gap Lock         | 10, 10      |\n| t     | RECORD    | PRIMARY    | S,REC_NOT_GAP | Record Lock      | 5           | -&gt; 레코드 락을 확인할 수 있다!\n| t     | RECORD    | ix_a       | S             | Next-Key Lock    | 5, 5        |\n+-------+-----------+------------+---------------+------------------+-------------+</code>\n        </deckgo-highlight-code>\n<h2 id=\"non-unique-세컨더리-인덱스-동등-장금-for-update\" style=\"position:relative;\">non-unique 세컨더리 인덱스 동등 장금 (FOR UPDATE)<a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%8F%99%EB%93%B1-%EC%9E%A5%EA%B8%88-for-update\" aria-label=\"non unique 세컨더리 인덱스 동등 장금 for update permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">+----+------+------+\n| id | a    | b    |\n+----+------+------+\n|  0 |    0 |    0 |\n|  5 |    5 |    5 |\n| 10 |   10 |   10 |\n| 15 |   15 |   15 |\n| 20 |   20 |   20 |\n| 25 |   25 |   25 |\n+----+------+------+\n\n-- &lt;A 세션&gt;\nBEGIN;\nselect id from t where a = 5 for update;\n\n+-------+-----------+------------+---------------+------------------+-------------+\n| table | lock_type | index_name | lock_mode     | lock_type_detail | locked_data |\n+-------+-----------+------------+---------------+------------------+-------------+\n| t     | TABLE     | NULL       | IX            | Next-Key Lock    | NULL        |\n| t     | RECORD    | ix_a       | X,GAP         | Gap Lock         | 10, 10      |\n| t     | RECORD    | PRIMARY    | X,REC_NOT_GAP | Record Lock      | 5           |\n| t     | RECORD    | ix_a       | X             | Next-Key Lock    | 5, 5        |\n+-------+-----------+------------+---------------+------------------+-------------+\n\n-- &lt;B 세션&gt;\n\nINSERT INTO t VALUES (7,7,7);   -- BLOCKED\nUPDATE t SET b=b+1 WHERE id=5;  -- BLOCKED\nUPDATE t SET b=b+1 WHERE id=10; -- 성공\n\nUPDATE t SET a=a+1 WHERE id=5;   -- BLOCKED\nUPDATE t SET a=a+1 WHERE id=10;  -- 성공</code>\n        </deckgo-highlight-code>\n<h2 id=\"프라이머리-키-인덱스-범위-잠금\" style=\"position:relative;\">프라이머리 키 인덱스 범위 잠금<a href=\"#%ED%94%84%EB%9D%BC%EC%9D%B4%EB%A8%B8%EB%A6%AC-%ED%82%A4-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%B2%94%EC%9C%84-%EC%9E%A0%EA%B8%88\" aria-label=\"프라이머리 키 인덱스 범위 잠금 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>조회 결과는 같지만 잠금 범위가 서로 다른 케이스를 확인해보자.</p>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">+----+------+------+\n| id | a    | b    |\n+----+------+------+\n|  0 |    0 |    0 |\n|  5 |    5 |    5 |\n| 10 |   10 |   10 |\n| 15 |   15 |   15 |\n+----+------+------+\n\n-- &lt;A 세션&gt;\nBEGIN;\nSELECT * FROM t WHERE id=10 FOR UPDATE;\n\n+-------+-----------+------------+---------------+------------------+-------------+\n| table | lock_type | index_name | lock_mode     | lock_type_detail | locked_data |\n+-------+-----------+------------+---------------+------------------+-------------+\n| t     | TABLE     | NULL       | IX            | Next-Key Lock    | NULL        |\n| t     | RECORD    | PRIMARY    | X,REC_NOT_GAP | Record Lock      | 10          |\n+-------+-----------+------------+---------------+------------------+-------------+\n\n-- &lt;B 세션&gt;\nUPDATE t SET b=b+1 WHERE id=5;  -- 성공\nINSERT INTO t VALUES (7,7,7);   -- 성공\nINSERT INTO t VALUES (11,11,11);    -- 성공</code>\n        </deckgo-highlight-code>\n<p>처음엔 <code class=\"language-text\">(5, 10]</code> 넥스트 키 락이 설정되고, id는 프라이머리 키 인덱스이고 <code class=\"language-text\">id = 10</code> 조건에 해당하는 레코드가 존재하므로 레코드 락으로 강등된다.</p>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">-- &lt;A 세션&gt;\nBEGIN;\nSELECT * FROM t WHERE id &gt;= 10 AND id &lt; 11 FOR UPDATE;\n\n+-------+-----------+------------+---------------+------------------+-------------+\n| table | lock_type | index_name | lock_mode     | lock_type_detail | locked_data |\n+-------+-----------+------------+---------------+------------------+-------------+\n| t     | TABLE     | NULL       | IX            | Next-Key Lock    | NULL        |\n| t     | RECORD    | PRIMARY    | X,REC_NOT_GAP | Record Lock      | 10          |\n| t     | RECORD    | PRIMARY    | X,GAP         | Gap Lock         | 15          |\n+-------+-----------+------------+---------------+------------------+-------------+\n\n-- &lt;B 세션&gt;\nINSERT INTO t VALUES (8, 8, 8);     -- 성공\nINSERT INTO t VALUES (9, 9, 9);     -- 성공\nINSERT INTO t VALUES (11, 11, 11);  -- BLOCKED\n\nUPDATE t SET b=b+1 WHERE id = 15;   -- 성공\nUPDATE t SET a=a+1 WHERE id = 15;   -- 성공\nUPDATE t SET a=a+1 WHERE id = 10;   -- BLOCKED</code>\n        </deckgo-highlight-code>\n<p><code class=\"language-text\">id >= 10 AND id &lt; 11</code> 조건에 해당하는 레코드를 찾게 되는데, 먼저 <code class=\"language-text\">id >= 10</code>에 대한 <code class=\"language-text\">(5, 10]</code> 넥스트 키 락이 설정된다. 하지만 <code class=\"language-text\">id = 10</code>인 레코드가 존재하므로 레코드 락으로 강등된다.</p>\n<p><code class=\"language-text\">id &lt; 11</code> 같은 범위 검색은 조건을 만족하는지 안하는지 다음 첫 번째 레코드까지 접근해야만 알 수 있기 때문에 오른쪽으로 범위 검색을 계속해서 수행하며 <code class=\"language-text\">id=15</code> 레코드를 찾게된다.<br>\n이미 <code class=\"language-text\">id=10</code>레코드를 찾았으므로 <code class=\"language-text\">(10, 15)</code>에 갭락이 설정된다.</p>\n<p>즉, 최종 잠금 범위는 <code class=\"language-text\">10, (10, 15)</code>가 된다.</p>\n<h2 id=\"non-unique-세컨더리-인덱스-범위-잠금\" style=\"position:relative;\">non-unique 세컨더리 인덱스 범위 잠금<a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%B2%94%EC%9C%84-%EC%9E%A0%EA%B8%88\" aria-label=\"non unique 세컨더리 인덱스 범위 잠금 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">+----+------+------+\n| id | a    | b    |\n+----+------+------+\n|  0 |    0 |    0 |\n|  5 |    5 |    5 |\n| 10 |   10 |   10 |\n| 15 |   15 |   15 |\n+----+------+------+\n\n-- &lt;A 세션&gt;\nBEGIN;\nSELECT * FROM t WHERE a &gt;= 10 AND a &lt; 11 FOR UPDATE;\n\n+-------+-----------+------------+---------------+------------------+-------------+\n| table | lock_type | index_name | lock_mode     | lock_type_detail | locked_data |\n+-------+-----------+------------+---------------+------------------+-------------+\n| t     | TABLE     | NULL       | IX            | Next-Key Lock    | NULL        |\n| t     | RECORD    | PRIMARY    | X,REC_NOT_GAP | Record Lock      | 10          |\n| t     | RECORD    | ix_a       | X             | Next-Key Lock    | 10, 10      |\n| t     | RECORD    | ix_a       | X             | Next-Key Lock    | 15, 15      |\n+-------+-----------+------------+---------------+------------------+-------------+\n\n-- &lt;B 세션&gt;\nINSERT INTO t VALUES (6, 6, 6);     -- BLOCKED\nINSERT INTO t VALUES (8, 8, 8);     -- BLOCKED\nINSERT INTO t VALUES (4, 4, 4);     -- 성공\n\nUPDATE t SET b=b+1 WHERE a = 15;    -- BLOCKED\nUPDATE t SET b=b+1 WHERE a = 10;    -- BLOCKED\nUPDATE t SET b=b+1 WHERE a = 5;     -- 성공\nUPDATE t SET b=b+1 WHERE a = 4;     -- 성공</code>\n        </deckgo-highlight-code>\n<p>먼저 <code class=\"language-text\">a=10</code>인 레코드를 찾아 <code class=\"language-text\">(5, 10]</code> 넥스트 키 락이 설정된다. <code class=\"language-text\">ix_a</code> 인덱스는 유니크 인덱스가 아니기 때문에 레코드 락으로 끝나지 않는다. (규칙 2를 적용할 수 없다.)<br>\n그렇기에 동등 조건을 만족하지 않는 다음 레코드까지 범위 검색을 수행하며, <code class=\"language-text\">a=15</code>에 해당하는 레코드를 찾아 검색이 중단되고 <code class=\"language-text\">(10, 15]</code>에 넥스트 키 락이 설정된다.<br>\n동등 조건이 아닌 범위 검색에 해당하기 때문에 갭 락으로 강등되지 않는다.</p>\n<p>즉, 최종 잠금 범위는 <code class=\"language-text\">(5, 10], (10, 15]</code>이다.</p>\n<h2 id=\"non-unique-세컨더리-인덱스-중복된-행-잠금\" style=\"position:relative;\">non-unique 세컨더리 인덱스 중복된 행 잠금<a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%A4%91%EB%B3%B5%EB%90%9C-%ED%96%89-%EC%9E%A0%EA%B8%88\" aria-label=\"non unique 세컨더리 인덱스 중복된 행 잠금 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">+----+------+------+\n| id | a    | b    |\n+----+------+------+\n|  0 |    0 |    0 |\n|  5 |    5 |    5 |\n| 10 |   10 |   10 |\n| 15 |   15 |   15 |\n| 20 |   20 |   20 |\n| 25 |   25 |   25 |\n| 30 |   10 |   30 |\n+----+------+------+\n\n-- &lt;A 세션&gt;\nBEGIN;\nSELECT * FROM t WHERE a=10 FOR UPDATE;\n\n\n+-------+-----------+------------+---------------+------------------+-------------+\n| table | lock_type | index_name | lock_mode     | lock_type_detail | locked_data |\n+-------+-----------+------------+---------------+------------------+-------------+\n| t     | TABLE     | NULL       | IX            | Next-Key Lock    | NULL        |\n| t     | RECORD    | PRIMARY    | X,REC_NOT_GAP | Record Lock      | 10          |\n| t     | RECORD    | PRIMARY    | X,REC_NOT_GAP | Record Lock      | 30          |\n| t     | RECORD    | ix_a       | X             | Next-Key Lock    | 10, 10      |\n| t     | RECORD    | ix_a       | X             | Next-Key Lock    | 10, 30      |\n| t     | RECORD    | ix_a       | X,GAP         | Gap Lock         | 15, 15      |\n+-------+-----------+------------+---------------+------------------+-------------+\n\n-- &lt;B 세션&gt;\nINSERT INTO t VALUES (4, 4, 4);      -- 성공\nINSERT INTO t VALUES (6, 6, 6);      -- BLOCKED\nINSERT INTO t VALUES (9, 9, 9);      -- BLOCKED\nINSERT INTO t VALUES (12, 12, 12);   -- BLOCKED\nINSERT INTO t VALUES (17, 17, 17);   -- 성공\nINSERT INTO t VALUES (24, 24, 24);   -- 성공\nINSERT INTO t VALUES (27, 27, 27);   -- 성공\n\nUPDATE t SET b=b+1 WHERE a = 5;     -- 성공\nUPDATE t SET b=b+1 WHERE a = 10;    -- BLOCKED\nUPDATE t SET b=b+1 WHERE a = 15;    -- 성공\nUPDATE t SET b=b+1 WHERE a = 20;    -- 성공\nUPDATE t SET b=b+1 WHERE a = 25;    -- 성공\n\nUPDATE t SET a=a+1 WHERE id = 0;\nUPDATE t SET a=a+1 WHERE id = 5;     -- BLOCKED\nUPDATE t SET a=a+1 WHERE id = 10;    -- BLOCKED\nUPDATE t SET a=a+1 WHERE id = 15;\nUPDATE t SET a=a+1 WHERE id = 20;\nUPDATE t SET a=a+1 WHERE id = 25;\nUPDATE t SET a=a+1 WHERE id = 30;    -- BLOCKED\n\nUPDATE t SET b=b+1 WHERE id = 0;\nUPDATE t SET b=b+1 WHERE id = 5;\nUPDATE t SET b=b+1 WHERE id = 10;    -- BLOCKED\nUPDATE t SET b=b+1 WHERE id = 15;\nUPDATE t SET b=b+1 WHERE id = 20;\nUPDATE t SET b=b+1 WHERE id = 25;\nUPDATE t SET b=b+1 WHERE id = 30;    -- BLOCKED</code>\n        </deckgo-highlight-code>\n<p>먼저 <code class=\"language-text\">a=10</code> 조건에 해당하는 레코드를 찾아 <code class=\"language-text\">(5, 10]</code> 넥스트 키 락을 설정한다.<br>\n정확히는 <code class=\"language-text\">(a=5, id=5)부터 (a=10, id=10)</code>까지 넥스트 키 락이 설정된다.</p>\n<p>그리고 넌유니크 세컨더리 인덱스이기 때문에 다음 레코드 <code class=\"language-text\">a=15</code>를 찾을 때 까지 오른쪽으로 검색을 수행하며, 이 과정에서 <code class=\"language-text\">a=10, id=30</code> 레코드를 거치기 때문에 <code class=\"language-text\">(a=10, id=10) ~ (a=10, id=30)</code>까지 넥스트 키 락이 설정된다.</p>\n<p>계속 오른쪽으로 검색하며 <code class=\"language-text\">a=15, id=15</code> 레코드를 만나면 검색 루프는 종료되고 <code class=\"language-text\">(a=10, id=30) ~ (a=15, id=15)</code> 까지 넥스트 키 락이 설정된다.<br>\n하지만 검색 조건 <code class=\"language-text\">a=10</code> 조건에 해당되지 않으므로 최종적으로 갭 락으로 강등된다.</p>\n<p>즉 최종 잠금 범위는</p>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">-- ix_a, X (Next-Key Lock)\n( (a=5, id=5), (a=10, id=10) ],\n\n-- ix_a, X (Next-Key Lock)\n( (a=10, id=10), (a=10, id=30) ], \n\n-- ix_a, X,GAP (Gap Lock)\n( (a=10, id=30), (a=15, id=15) )</code>\n        </deckgo-highlight-code>","frontmatter":{"title":"MySQL Lock 실험실","date":"2025-10-26","update":"2025-10-27","description":null,"tags":["mysql","lock"]},"tableOfContents":"<ul>\n<li><a href=\"#%EA%B0%AD-%EB%9D%BD%EC%9C%BC%EB%A1%9C-%EC%9D%B8%ED%95%9C-insert-%EC%8B%A4%ED%8C%A8\">갭 락으로 인한 INSERT 실패</a></li>\n<li><a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%8F%99%EB%93%B1-%EC%9E%A0%EA%B8%88-for-share\">non-unique 세컨더리 인덱스 동등 잠금 (FOR SHARE)</a></li>\n<li><a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%8F%99%EB%93%B1-%EC%9E%A5%EA%B8%88-for-update\">non-unique 세컨더리 인덱스 동등 장금 (FOR UPDATE)</a></li>\n<li><a href=\"#%ED%94%84%EB%9D%BC%EC%9D%B4%EB%A8%B8%EB%A6%AC-%ED%82%A4-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%B2%94%EC%9C%84-%EC%9E%A0%EA%B8%88\">프라이머리 키 인덱스 범위 잠금</a></li>\n<li><a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EB%B2%94%EC%9C%84-%EC%9E%A0%EA%B8%88\">non-unique 세컨더리 인덱스 범위 잠금</a></li>\n<li><a href=\"#non-unique-%EC%84%B8%EC%BB%A8%EB%8D%94%EB%A6%AC-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%A4%91%EB%B3%B5%EB%90%9C-%ED%96%89-%EC%9E%A0%EA%B8%88\">non-unique 세컨더리 인덱스 중복된 행 잠금</a></li>\n</ul>"},"previous":{"fields":{"slug":"/2025y/webclient/"},"frontmatter":{"title":"WebClient PrematureCloseException 원인 분석하기"}},"next":null},"pageContext":{"id":"9adc1019-637b-546b-ba6a-a7b3328b7519","previousPostId":"e0b1b946-ea07-5d47-9d52-4627d912ebd9","nextPostId":null}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}