{"componentChunkName":"component---src-templates-blog-post-js","path":"/2025y/labs/","result":{"data":{"site":{"siteMetadata":{"title":"코딩 주머니"}},"markdownRemark":{"id":"9adc1019-637b-546b-ba6a-a7b3328b7519","excerpt":"넥스트 키 락이 레코드 락 또는 갭 락으로 강등 출처: InnoDB 행 잠금의 2원 2규칙 원칙 1: InnoDB의 기본 잠금 단위는 넥스트 키 락이며, 넥스트 키 락의 잠금 범위는 좌측으로는 개구간, 우측으로는 폐구간이다.  InnoDB…","html":"<h1 id=\"넥스트-키-락이-레코드-락-또는-갭-락으로-강등\" style=\"position:relative;\">넥스트 키 락이 레코드 락 또는 갭 락으로 강등<a href=\"#%EB%84%A5%EC%8A%A4%ED%8A%B8-%ED%82%A4-%EB%9D%BD%EC%9D%B4-%EB%A0%88%EC%BD%94%EB%93%9C-%EB%9D%BD-%EB%98%90%EB%8A%94-%EA%B0%AD-%EB%9D%BD%EC%9C%BC%EB%A1%9C-%EA%B0%95%EB%93%B1\" aria-label=\"넥스트 키 락이 레코드 락 또는 갭 락으로 강등 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<blockquote>\n<p>출처: <a href=\"https://devocean.sk.com/blog/techBoardDetail.do?ID=167948&#x26;boardType=techBlog\">InnoDB 행 잠금의 2원 2규칙</a></p>\n</blockquote>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">-- 테스트 테이블 및 데이터 준비\nCREATE TABLE t (\n  id int NOT NULL,\n  a int NULL,\n  b int NULL,\n  PRIMARY KEY (id),\n  KEY ix_a (a)\n) ENGINE=InnoDB;\n\nINSERT INTO t (id, a, b) VALUES\n  (0, 0, 0), (5, 5, 5), (10, 10, 10),\n  (15, 15, 15), (20, 20, 20), (25, 25, 25);</code>\n        </deckgo-highlight-code>\n<details>\n<summary>잠금 상태 조회하기</summary>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">-- 잠금 상태 조회하기\nSELECT \n    dl.object_name AS `table`,\n    dl.lock_type,\n    dl.index_name,\n    dl.lock_mode,\n    CASE \n        WHEN dl.lock_mode LIKE &#39;%REC_NOT_GAP%&#39; THEN &#39;Record Lock&#39;\n        WHEN dl.lock_mode LIKE &#39;%GAP%&#39; AND dl.lock_mode NOT LIKE &#39;%REC_NOT_GAP%&#39; THEN &#39;Gap Lock&#39;\n        WHEN dl.lock_mode NOT LIKE &#39;%GAP%&#39; AND dl.lock_mode NOT LIKE &#39;%REC_NOT_GAP%&#39; THEN &#39;Next-Key Lock&#39;\n        ELSE dl.lock_mode\n    END AS lock_type_detail,\n    dl.lock_data AS locked_data\nFROM performance_schema.data_locks dl\nORDER BY dl.object_name, dl.lock_data;</code>\n        </deckgo-highlight-code>\n</details>\n<ul>\n<li><strong>원칙 1</strong>: InnoDB의 기본 잠금 단위는 넥스트 키 락이며, 넥스트 키 락의 잠금 범위는 좌측으로는 개구간, 우측으로는 폐구간이다. <code class=\"language-text\">ex) (R1, R10]</code>\n<ul>\n<li>InnoDB 잠금의 시작은 넥스트 키 락이다. 이후에 갭 락과 레코드 락을 따져보는 것이다.</li>\n</ul>\n</li>\n<li><strong>원칙 2</strong>: 잠금은 쿼리를 수행하는 과정에서 접근한 객체에만 걸린다.</li>\n<li><strong>규칙 1</strong>: 인덱스(고유, 비고유)를 사용하는 동등 조건의 쿼리를 수행할 때 레코드 스캔 방향은 오른쪽이며, 마지막 레코드가 동등 조건을 만족하지 않으면 넥스트 키 락은 갭 락으로 강등된다.</li>\n<li><strong>규칙 2</strong>: 고유 인덱스를 사용하는 동등 조건의 쿼리를 수행할 때, 레코드가 동등 조건을 만족하면 넥스트 키 락은 레코드 락으로 강등된다.</li>\n</ul>\n<h2 id=\"갭-락으로-인한-insert-실패\" style=\"position:relative;\">갭 락으로 인한 INSERT 실패<a href=\"#%EA%B0%AD-%EB%9D%BD%EC%9C%BC%EB%A1%9C-%EC%9D%B8%ED%95%9C-insert-%EC%8B%A4%ED%8C%A8\" aria-label=\"갭 락으로 인한 insert 실패 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"sql\" terminal=\"carbon\" theme=\"one-light\" line-numbers=\"true\"  >\n          <code slot=\"code\">-- &lt;A 세션&gt; 존재하지 않는 id = 7를 업데이트 \nBEGIN;\nUPDATE t SET b=b+1 WHERE id=7;\n\n+-------+-----------+------------+-----------+------------------+-------------+\n| table | lock_type | index_name | lock_mode | lock_type_detail | locked_data |\n+-------+-----------+------------+-----------+------------------+-------------+\n| t     | TABLE     | NULL       | IX        | Next-Key Lock    | NULL        |\n| t     | RECORD    | PRIMARY    | X,GAP     | Gap Lock         | 10          |\n+-------+-----------+------------+-----------+------------------+-------------+\n\n-- &lt;B 세션&gt;\nINSERT INTO t VALUES (8, 8, 8);     -- BLOCKED\nINSERT INTO t VALUES (9, 9, 9);     -- BLCOKED\n\nINSERT INTO t VALUES (4, 4, 4);     -- 성공\nINSERT INTO t VALUES (11, 11, 11);  -- 성공\nUPDATE t SET b=b+1 WHERE id=5;      -- 성공\nUPDATE t SET b=b+1 WHERE id=10;     -- 성공</code>\n        </deckgo-highlight-code>\n<p>먼저 넥스트 키 락에 의해 <code class=\"language-text\">(5, 10]</code>으로 잠금되고, 마지막 레코드 10이 id=7 조건에 만족하지 않기 때문에 넥스트 키 락은 갭 락으로 강등되어 <code class=\"language-text\">(5, 10)</code>의 잠금이 발생한다.<br>\n그리하여 마지막 업데이트 쿼리는 둘 다 성공한다.</p>","frontmatter":{"title":"MySQL 실험실","date":"2025-10-26","update":"2025-10-26","description":null,"tags":["mysql","transaction","lock"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EB%84%A5%EC%8A%A4%ED%8A%B8-%ED%82%A4-%EB%9D%BD%EC%9D%B4-%EB%A0%88%EC%BD%94%EB%93%9C-%EB%9D%BD-%EB%98%90%EB%8A%94-%EA%B0%AD-%EB%9D%BD%EC%9C%BC%EB%A1%9C-%EA%B0%95%EB%93%B1\">넥스트 키 락이 레코드 락 또는 갭 락으로 강등</a></p>\n<ul>\n<li><a href=\"#%EA%B0%AD-%EB%9D%BD%EC%9C%BC%EB%A1%9C-%EC%9D%B8%ED%95%9C-insert-%EC%8B%A4%ED%8C%A8\">갭 락으로 인한 INSERT 실패</a></li>\n</ul>\n</li>\n</ul>"},"previous":{"fields":{"slug":"/2025y/webclient/"},"frontmatter":{"title":"WebClient PrematureCloseException 원인 분석하기"}},"next":null},"pageContext":{"id":"9adc1019-637b-546b-ba6a-a7b3328b7519","previousPostId":"e0b1b946-ea07-5d47-9d52-4627d912ebd9","nextPostId":null}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}