{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023y02m/request/","result":{"data":{"site":{"siteMetadata":{"title":"코딩 주머니"}},"markdownRemark":{"id":"d729e334-539e-527c-8a84-306d2d2769b5","excerpt":"회사에서 1차 트레이닝 프로젝트를 진행하며 를 처음 접하게 되었다. Armeria가 빌드될 때 와 를 같이 등록하게 된다.참고 기존 REST…","html":"<p>회사에서 <a href=\"https://jdalma.github.io/2022y/trainingProject/\">1차 트레이닝 프로젝트</a>를 진행하며 <code class=\"language-text\">NIO</code>를 처음 접하게 되었다.</p>\n<ul>\n<li>Armeria가 빌드될 때 <code class=\"language-text\">Netty</code>와 <code class=\"language-text\">TomcatService</code>를 같이 등록하게 된다.<a href=\"https://github.com/jdalma/armeria-grpc-kotlin/blob/master/src/main/kotlin/com/example/armeriaserver/grpc/sample/ArmeriaConfig.kt#L42\">참고</a></li>\n<li>기존 REST를 유지시키면서 <code class=\"language-text\">gRPC</code>를 통한 비동기 통신을 추가하기 위해서이다.</li>\n</ul>\n<p><code class=\"language-text\">NIO</code>와 <code class=\"language-text\">BIO</code>의 요청 흐름에 대해 알아보자<br>\n먼저 읽으면 좋은 글<br>\n<a href=\"https://engineering.linecorp.com/ko/blog/do-not-block-the-event-loop-part3#mcetoc_1gegucrd69\">비동기 서버에서 이벤트 루프를 블록하면 안 되는 이유 3부 - Reactor 패턴과 이벤트 루프</a></p>\n<p><strong><code class=\"language-text\">Reactor</code> Class</strong><br>\n<code class=\"language-text\">Selector</code>는 <code class=\"language-text\">SelectableChannel</code> 객체의 **<a href=\"https://ko.wikipedia.org/wiki/%EB%A9%80%ED%8B%B0%ED%94%8C%EB%A0%89%EC%84%9C\">멀티플렉서</a>**이다.</p>\n<ul>\n<li>여러 신호 중 하나를 선택하여 선택된 입력을 하나의 라인에 전달하는 장치</li>\n</ul>\n<p><code class=\"language-text\">Selector</code>는 <code class=\"language-text\">SelectorProvider.provider().openSelector()</code>를 통해 생성할 수 있다. 시스템의 기본 <code class=\"language-text\">SelectorProvider</code>를 제공</p>\n<ol>\n<li><a href=\"https://stackoverflow.com/questions/42781445/difference-between-jboss-netty-and-netty\">Jboss netty와 netty의 차이점은 무엇입니까?</a></li>\n<li><a href=\"https://engineering.linecorp.com/ko/blog/author/%EA%B9%80%EC%A2%85%EB%AF%BC\">비동기에서 이벤트 루프를 블록하면 안 되는 이유 시리즈</a></li>\n<li><a href=\"https://developer.ibm.com/tutorials/j-javaee8-servlet4/\"><code class=\"language-text\">IBM</code> Servlet 4</a></li>\n<li><a href=\"https://javaee.github.io/servlet-spec/downloads/servlet-4.0/servlet-4_0_FINAL.pdf\">Java™ Servlet Specification 4.0 PDF</a></li>\n<li><a href=\"https://tomcat.apache.org/tomcat-9.0-doc/index.html\">Apache Tomcat 9 docs</a></li>\n<li><a href=\"https://github.com/netty/netty/wiki/User-guide-for-4.x\">Netty User guide for 4.x</a></li>\n<li>사용중인 버전\n<ul>\n<li><a href=\"https://github.com/spring-projects/spring-boot/releases/tag/v2.7.6\">스프링 부트 <code class=\"language-text\">2.7.6</code></a></li>\n<li>Netty <code class=\"language-text\">4.1.82</code></li>\n<li>Armeria-bom <code class=\"language-text\">1.20.3</code></li>\n</ul>\n</li>\n</ol>","frontmatter":{"title":"BlockingIO와 NonBlockingIO (작성중)","date":"February 05, 2023","description":null,"tags":["Blocking","NonBlocking"]}},"previous":{"fields":{"slug":"/2022y/yearend/"},"frontmatter":{"title":"2022년 회고"}},"next":{"fields":{"slug":"/2023y02m/generic/"},"frontmatter":{"title":"코틀린 * 사용하기"}}},"pageContext":{"id":"d729e334-539e-527c-8a84-306d2d2769b5","previousPostId":"c7aeeb32-24c2-5333-a99d-48a26cddd34b","nextPostId":"cb7d1452-1c84-5741-a959-b23fb4be26a3"}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}