{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"코딩 주머니"}},"allMarkdownRemark":{"nodes":[{"excerpt":"…","fields":{"slug":"/2024y/generic/"},"frontmatter":{"date":"September 27, 2024","title":"제네릭 가변성에 대해","description":null}},{"excerpt":"강의 견고한 결제 시스템 구축 평소에 결제/정산 도메인에 관심이 있었어서 강의가 공개되자마자 구매해놓았었는데 이번에 완강해보았다. 결제,정산,장부 서비스들을 Spring webflux, R2DBC, 헥사고날 아키텍처, kafka…","fields":{"slug":"/2024y/bookReview/bookReview/"},"frontmatter":{"date":"September 26, 2024","title":"2024년 기록","description":null}},{"excerpt":"…","fields":{"slug":"/2023y/oop/"},"frontmatter":{"date":"July 16, 2024","title":"좋은 코드, 고품질 코드란?","description":null}},{"excerpt":"IDC 환경의 MySQL 서버를 AWS로 마이그레이션하면서 스프링에서 읽기/쓰기 분리를 스프링에서 제공하는 LazyConnectionDataSourceProxy 클래스를 활용해서 해결하였다. 이번 글을 통해 JDBC와 스프링이 제공하는 PSA…","fields":{"slug":"/2024y/rwseparate/"},"frontmatter":{"date":"July 14, 2024","title":"Spring RW분리를 이해하기 위한 여정 (+ JDBC, 서비스 추상화)","description":null}},{"excerpt":"…","fields":{"slug":"/2024y/invokedynamic/"},"frontmatter":{"date":"July 01, 2024","title":"invokedynamic 이란?","description":null}},{"excerpt":"The Boy Scout Rule : Always leave the campground cleaner than you found it…","fields":{"slug":"/2024y/boyscoutRule/"},"frontmatter":{"date":"May 25, 2024","title":"보이스카웃 규칙 실천하기","description":null}},{"excerpt":"IDC에서 운용중이던 단일 데이터베이스를 AWS Aurora로 이관하는 동시에 MySQL…","fields":{"slug":"/2024y/mysqlMigration/"},"frontmatter":{"date":"May 11, 2024","title":"AWS DMS를 이용한 MySQL 마이그레이션","description":null}},{"excerpt":"발단 얼마전에 IDC에서 운영 중이던 MySQL을 AWS Aurora로 데이터 이관 작업을 진행했었다. 기존에 사용하던 옵션들을 확인해서 패킷 바디 사이즈, 최대 커넥션 개수를 Aurora Cluster Parameter Group…","fields":{"slug":"/2024y/troubleShooting/timezone/"},"frontmatter":{"date":"May 01, 2024","title":"DATETIME 필드와 TIMESTAMP 필드 차이","description":null}},{"excerpt":"CI/CD를 고민하면서 서로 의존 관계에 있는 서비스들은 통합 테스트를 어떻게 진행할지 생각해본적이 있다.  위의 그림에서 A 서비스 를 수정하고 배포한다고 가정할 때 통합 테스트 환경에서 사용자의 요청을 처리하기 위해 이해관계에 놓여있는 B…","fields":{"slug":"/2024y/testcontainers/"},"frontmatter":{"date":"April 07, 2024","title":"테스트 불모지에 Testcontainers 심기","description":null}},{"excerpt":"스프링의 프록시 방식으로 AOP를 생성하는 가장 기본적인 방법을 이해하기 위해서는 사전지식이 필요하다. Reflection Java Dynamic Proxy CGLIB ProxyFactory FactoryBean ProxyFactoryBean…","fields":{"slug":"/2024y/postprocessor/"},"frontmatter":{"date":"March 17, 2024","title":"빈 후처리기를 이용한 프록시 생성에 대해","description":null}},{"excerpt":"InnoDB Locking Dirty read, Non-repeatable read, and Phantom read 트랜잭션 트랜잭션은 작업의 완전성을 보장 (COMMIT, ROLLBACK…","fields":{"slug":"/2024y/transaction/"},"frontmatter":{"date":"February 13, 2024","title":"트랜잭션과 잠금","description":null}},{"excerpt":"들어가며 벌써 2023년이 끝난다. 2022년 회고에 이어 2023년 회고, 두 번째 회고를 작성해보려 한다. 많은 일들이 있었는데 찬찬히 정리해보자. 회사 적응기 2년 반정도 SI…","fields":{"slug":"/2023y/retrospect/"},"frontmatter":{"date":"December 31, 2023","title":"2023년 회고","description":null}},{"excerpt":"…","fields":{"slug":"/2023y/bookReview/bookReview/"},"frontmatter":{"date":"December 30, 2023","title":"2023년 기록","description":null}},{"excerpt":"TDD, 클린 코드 with Kotlin 이 교육은 코틀린과 클린코드(OOP, 컨벤션), TDD를 가르쳐준다. 하지만 나는 코틀린과 클린코드만 배우기에도 벅차다고 생각하여 TDD…","fields":{"slug":"/2023y/kotlinCleanCode/"},"frontmatter":{"date":"December 10, 2023","title":"NEXTSTEP 클린코드 with Kotlin 회고","description":null}},{"excerpt":"들어가며 개발자로 지내면서 연말회고를 처음 작성하여 제목은 \"202…","fields":{"slug":"/2022y/yearend/"},"frontmatter":{"date":"December 31, 2022","title":"2022년 회고","description":null}},{"excerpt":"기존에 존재하던 REST API를 그대로 유지하면서 gRPC 통신을 같이 사용할 수 있을지 확인하고, Stream 통신을 테스트해보는 것이다. REST API와 RPC 통신을 한 포트로 처리할 수 있는 Armeria를 사용한다. protocol…","fields":{"slug":"/2022y/trainingProject/"},"frontmatter":{"date":"December 15, 2022","title":"Armeria + gRPC 사용해보기","description":null}},{"excerpt":"해당 글은 백준 - 키로거문제를 풀며 로 풀면 시간초과가 났었는데 를 사용하여 해결하였었다. (으로도 풀 수 있다)\n이 문제를 계기로 와 를 정리해보려 한다. 참고 링크  Iterator  Enumeration  difference-between…","fields":{"slug":"/2022y/iterator/"},"frontmatter":{"date":"November 15, 2022","title":"Iterator?Enumerator?Iterable?","description":null}},{"excerpt":"아래의 링크를 참고하였습니다  Lombok 사용상 주의점  constructor  configuration @AllArgsConstructor, @RequiredArgsConstructor 사용금지  Lombok을 사용하면 IDE Generate…","fields":{"slug":"/2022y/lombok/"},"frontmatter":{"date":"October 03, 2022","title":"롬복 생성자 어노테이션 써도 될까?","description":null}},{"excerpt":"출처 Loading, Linking, and Initializing 클래스는 언제 로딩되고 초기화되는가? 위의 게시글을 따라 테스트 하였습니다. 클래스 로딩 클래스 로더가 파일을 찾고 JVM 메모리에 올리는 작업을 의미한다. ⭐️ JVM…","fields":{"slug":"/2022y/classLoader/"},"frontmatter":{"date":"August 30, 2022","title":"클래스는 언제 로딩될까?","description":null}},{"excerpt":"동안 다니던 SI…","fields":{"slug":"/2022y/leave/"},"frontmatter":{"date":"July 31, 2022","title":"퇴사","description":null}}]}},"pageContext":{}},"staticQueryHashes":["230163734","3589320610"],"slicesMap":{}}